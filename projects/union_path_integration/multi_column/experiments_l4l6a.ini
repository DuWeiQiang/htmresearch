[DEFAULT]
repetitions = 1
iterations = 1
path = results
seed = 42


# Objects Generation parameters
features_per_object = 10
object_width = 4
num_features = 40
feature_distribution = "AllFeaturesEqual_Replacement"
num_active_minicolumns = 10 ; a.k.a. "numInputBits"

# Max number of sensations to infer
num_sensations = 9

# Number of times each sensation should be learned
num_learning_points = 1

# L4 Parameters
threshold = 8 ; math.ceil(num_modules * 0.8)
l4_params =
    "columnCount": 150,
    "cellsPerColumn": 16,
    "initialPermanence": 1.0,
    "activationThreshold": %(threshold)s,
    "minThreshold": %(threshold)s,
    "reducedBasalThreshold": %(threshold)s,
    "sampleSize": %(num_modules)s,
    "implementation": "ApicalTiebreak"

# L6a Parameters
num_modules = 10
scale = 40
angle = 60
cells_per_axis = 10
l6a_params =
    "moduleCount": %(num_modules)s,
    "cellsPerAxis": %(cells_per_axis)s,
    "activationThreshold": 8,
    "initialPermanence": 1.0,
    "connectedPermanence": 0.5,
    "learningThreshold": 8,
    "sampleSize": 10,
    "permanenceIncrement": 0.1,
    "permanenceDecrement": 0.0,
    "bumpOverlapMethod": "probabilistic"

###########################################
[Density by Sensation]
num_modules = 10
# Iterate over number of objects
iterations = [40, 50, 60, 70] ; a.k.a "num_objects"
num_features = 30
cells_per_axis = 10 ; a.k.a. "locationModuleWidth"
num_sensations = 9
threshold = 8 ; math.ceil(num_modules * 0.8)
seed = 42











